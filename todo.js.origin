const lists = document.querySelector(".js-lists"),
    listInput = lists.querySelector("input"),
    ul = document.querySelector(".js-listArea");

const CURRENT_TODO = "currentTodos";

let toDos = [];


function deleteToDo(event) {
    const btn = event.target; // 현재 클릭한 대상 알 수 있게
    const li = btn.parentNode;
    ul.removeChild(li);

    const cleanToDos = toDos.filter(function (toDo) {
        // 현재클릭한 li의 id를 제외한 나머지 모두 배열로 만듬
        return toDo.id !== parseInt(li.id);
    });

    toDos = cleanToDos;
    // 삭제하고 남은 list들 배열로 return함 

    saveToDos();
    // localStorage에 저장

}

function saveToDos() {
    localStorage.setItem(CURRENT_TODO, JSON.stringify(toDos));
}

function paintToDo(text) {
    const li = document.createElement("li");
    const delBtn = document.createElement("button");
    const span = document.createElement("span");
    const neWId = toDos.length + 1;

    delBtn.innerText = "X";
    delBtn.addEventListener("click", deleteToDo);
    span.innerText = text;
    li.appendChild(span);
    li.appendChild(delBtn);
    ul.appendChild(li);
    li.id = neWId; // li에게도 id 만들어주기

    const toDoObj = {
        text: text,
        id: neWId
    };
    toDos.push(toDoObj);

    saveToDos();
}

function handleSubmit(event) {
    event.preventDefault();
    let currentValue = listInput.value;
    paintToDo(currentValue);
    listInput.value = "";
}

function loadToDo() {
    const loadedToDos = localStorage.getItem(CURRENT_TODO);
    if (loadedToDos !== null) {
        //loadedToDos는 JSON.stringify를 통해 문자열로 바꿔준 상태
        // localStorage에 있는 toDoList들 화면에 나타나게 해주는 단계
        // 새로고침해도 남아있음
        const parsedToDos = JSON.parse(loadedToDos);
        parsedToDos.forEach(
            function (toDo) {
                paintToDo(toDo.text);
            }
        );
    }
    // listValue === null이면 할 일이 없음, input은 항상 보여지기 떄문에
}

function init() {
    loadToDo();
    lists.addEventListener("submit", handleSubmit);
}
init();